# -*- CMakeLists.txt generated by CodeLite IDE. Do not edit by hand -*-

cmake_minimum_required(VERSION 2.8.11)

project(nifti)

# Define some variables
set(PROJECT_nifti_PATH "${CMAKE_CURRENT_LIST_DIR}")
set(WORKSPACE_PATH "${CMAKE_CURRENT_LIST_DIR}/..")



#{{{{ User Code 1
# Place your code here
#}}}}

include_directories(
    .
    ..
    ../../
    .
    ${WORKSPACE_PATH}/z
    ${WORKSPACE_PATH}/znz/include
    ${WORKSPACE_PATH}/nifti/include
    .

)


# Compiler options
add_definitions(-DHAVE_ZLIB)
add_definitions(--std=gnu++17)
add_definitions(-g)
add_definitions(-O0)
add_definitions(-Wall)
add_definitions(
    -DHAVE_ZLIB
)


# Linker options
set(LINK_OPTIONS -lm)
set(LINK_OPTIONS ${LINK_OPTIONS} -lz)
set(LINK_OPTIONS ${LINK_OPTIONS} -lznz)
set(LINK_OPTIONS ${LINK_OPTIONS} )
set(LINK_OPTIONS ${LINK_OPTIONS} -g)
set(LINK_OPTIONS ${LINK_OPTIONS} -O0)
set(LINK_OPTIONS ${LINK_OPTIONS} -Wall)


if(WIN32)
    # Resource options
endif(WIN32)

# Library path
link_directories(
    .
    ${WORKSPACE_PATH}/cmake-build-${CONFIGURATION_NAME}/output
)

# Define the C sources
set ( C_SRCS
    ${CMAKE_CURRENT_LIST_DIR}/src/nifti1_io.c
)

set_source_files_properties(
    ${C_SRCS} PROPERTIES COMPILE_FLAGS 
    " -DHAVE_ZLIB -g -O0 -Wall")

if(WIN32)
    enable_language(RC)
    set(CMAKE_RC_COMPILE_OBJECT
        "<CMAKE_RC_COMPILER> ${RC_OPTIONS} -O coff -i <SOURCE> -o <OBJECT>")
endif(WIN32)



#{{{{ User Code 2
# Place your code here
#}}}}

add_library(nifti SHARED ${RC_SRCS} ${CXX_SRCS} ${C_SRCS})
target_link_libraries(nifti ${LINK_OPTIONS})



#{{{{ User Code 3
# Place your code here
#}}}}

